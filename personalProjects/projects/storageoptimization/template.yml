# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Infrastructure Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  compressvideopb:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Description: Lambda function that compresses videos.
      MemorySize: 10240
      Timeout: 303
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 10238
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      FunctionUrlConfig:
        AuthType: NONE
        InvokeMode: BUFFERED
        Cors:
          AllowCredentials: false
          AllowOrigins:
            - '*'
          ExposeHeaders:
            - '*'
          AllowHeaders:
            - '*'
          MaxAge: 298
          AllowMethods:
            - '*'
      Layers:
        - !Ref Layer1
        - !Ref Layer2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:975050318184:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:975050318184:log-group:/aws/lambda/compress_video_pb:*
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
                - ds:CreateComputer
                - ds:DescribeDirectories
                - ec2:DescribeInstanceStatus
                - logs:*
                - ssm:*
                - ec2messages:*
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: >-
                arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*
              Condition:
                StringLike:
                  iam:AWSServiceName: ssm.amazonaws.com
            - Effect: Allow
              Action:
                - iam:DeleteServiceLinkedRole
                - iam:GetServiceLinkedRoleDeletionStatus
              Resource: >-
                arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*
            - Effect: Allow
              Action:
                - ssmmessages:CreateControlChannel
                - ssmmessages:CreateDataChannel
                - ssmmessages:OpenControlChannel
                - ssmmessages:OpenDataChannel
              Resource: '*'
            - Action:
                - ec2:*
              Effect: Allow
              Resource: '*'
            - Effect: Allow
              Action:
                - elasticloadbalancing:*
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:*
              Resource: '*'
            - Effect: Allow
              Action:
                - autoscaling:*
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - autoscaling.amazonaws.com
                    - ec2scheduled.amazonaws.com
                    - elasticloadbalancing.amazonaws.com
                    - spot.amazonaws.com
                    - spotfleet.amazonaws.com
                    - transitgateway.amazonaws.com
            - Effect: Allow
              Action:
                - cognito-identity:Describe*
                - cognito-identity:Get*
                - cognito-identity:List*
                - cognito-idp:Describe*
                - cognito-idp:AdminGet*
                - cognito-idp:AdminList*
                - cognito-idp:List*
                - cognito-idp:Get*
                - cognito-sync:Describe*
                - cognito-sync:Get*
                - cognito-sync:List*
                - iam:ListOpenIdConnectProviders
                - iam:ListRoles
                - sns:ListPlatformApplications
              Resource: '*'
            - Action:
                - dynamodb:*
                - dax:*
                - application-autoscaling:DeleteScalingPolicy
                - application-autoscaling:DeregisterScalableTarget
                - application-autoscaling:DescribeScalableTargets
                - application-autoscaling:DescribeScalingActivities
                - application-autoscaling:DescribeScalingPolicies
                - application-autoscaling:PutScalingPolicy
                - application-autoscaling:RegisterScalableTarget
                - cloudwatch:DeleteAlarms
                - cloudwatch:DescribeAlarmHistory
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - cloudwatch:GetMetricStatistics
                - cloudwatch:ListMetrics
                - cloudwatch:PutMetricAlarm
                - cloudwatch:GetMetricData
                - datapipeline:ActivatePipeline
                - datapipeline:CreatePipeline
                - datapipeline:DeletePipeline
                - datapipeline:DescribeObjects
                - datapipeline:DescribePipelines
                - datapipeline:GetPipelineDefinition
                - datapipeline:ListPipelines
                - datapipeline:PutPipelineDefinition
                - datapipeline:QueryObjects
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
                - iam:GetRole
                - iam:ListRoles
                - kms:DescribeKey
                - kms:ListAliases
                - sns:CreateTopic
                - sns:DeleteTopic
                - sns:ListSubscriptions
                - sns:ListSubscriptionsByTopic
                - sns:ListTopics
                - sns:Subscribe
                - sns:Unsubscribe
                - sns:SetTopicAttributes
                - lambda:CreateFunction
                - lambda:ListFunctions
                - lambda:ListEventSourceMappings
                - lambda:CreateEventSourceMapping
                - lambda:DeleteEventSourceMapping
                - lambda:GetFunctionConfiguration
                - lambda:DeleteFunction
                - resource-groups:ListGroups
                - resource-groups:ListGroupResources
                - resource-groups:GetGroup
                - resource-groups:GetGroupQuery
                - resource-groups:DeleteGroup
                - resource-groups:CreateGroup
                - tag:GetResources
                - kinesis:ListStreams
                - kinesis:DescribeStream
                - kinesis:DescribeStreamSummary
              Effect: Allow
              Resource: '*'
            - Action:
                - cloudwatch:GetInsightRuleReport
              Effect: Allow
              Resource: arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*
            - Action:
                - iam:PassRole
              Effect: Allow
              Resource: '*'
              Condition:
                StringLike:
                  iam:PassedToService:
                    - application-autoscaling.amazonaws.com
                    - application-autoscaling.amazonaws.com.cn
                    - dax.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - replication.dynamodb.amazonaws.com
                    - dax.amazonaws.com
                    - dynamodb.application-autoscaling.amazonaws.com
                    - contributorinsights.dynamodb.amazonaws.com
                    - kinesisreplication.dynamodb.amazonaws.com
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: Bucket1
            Events:
              - s3:ObjectCreated:*
        Api1:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /get_uploaded_videos
            Method: POST
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  Bucket1:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  BucketPolicy1:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: Bucket1
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              - arn:aws:s3:::Bucket1/*
              - arn:aws:s3:::Bucket1
            Condition:
              Bool:
                aws:SecureTransport: false
  # This resource represents your Layer with name boto3. To download the content
# of your Layer, go to
# 
# aws.amazon.com/go/view?arn=arn%3Aaws%3Alambda%3Aus-east-1%3A975050318184%3Alayer%3Aboto3%3A1&source=lambda
  Layer1:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./boto3
      LayerName: boto3
      CompatibleRuntimes:
        - python3.12
        - python3.10
        - python3.11
        - python3.8
        - python3.9
  # This resource represents your Layer with name pyJwt. To download the content
# of your Layer, go to
# 
# aws.amazon.com/go/view?arn=arn%3Aaws%3Alambda%3Aus-east-1%3A975050318184%3Alayer%3ApyJwt%3A2&source=lambda
  Layer2:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./pyJwt
      LayerName: pyJwt
      CompatibleRuntimes:
        - python3.12
        - python3.10
        - python3.11
        - python3.8
        - python3.9
